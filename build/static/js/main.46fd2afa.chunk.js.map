{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","react_default","a","createElement","className","id","style","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","mode","updateMode","_useState3","_useState4","textStyle","updateTextStyle","Fragment","concat","react_router_dom","to","title","aria-label","htmlFor","onChange","document","body","role","placeholder","TextForm","text","textfun","heading","rows","value","event","target","onClick","toUpperCase","toLowerCase","length","split","defaultProps","App","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.46fd2afa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, updateStyle] = useState({\r\n        color : 'black',\r\n        backgroundColor : 'white'\r\n    })\r\n\r\n    // let toggleMode = () => {\r\n    //     if(myStyle.backgroundColor == 'white'){\r\n    //         updateStyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black'\r\n    //         })\r\n    //     }else{\r\n    //         updateStyle({\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         })\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className='container my-3' >\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle} >\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            About us\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            FAQ\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Extra info\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const [mode, updateMode] = useState('light');\r\n    const [textStyle, updateTextStyle] = useState({\r\n        color : 'black'\r\n    })\r\n    let toggText = 'Enable dark mode'\r\n    let toggMode = () => {\r\n        if(mode === 'light'){\r\n            updateMode('dark')\r\n            toggText = 'Enable light mode'\r\n            updateTextStyle({\r\n                color : 'white'\r\n            })\r\n            document.title = 'Light Mode'\r\n            document.body.style.backgroundColor = '#042743'\r\n            document.body.style.color = 'white'\r\n            // setInterval(() => {\r\n            //     document.title = 'Please Install our APP';\r\n            // },2000);\r\n            // setInterval(() => {\r\n            //     document.title = 'FREE LOTTERY!!';\r\n            // },1500)\r\n        }else{\r\n            updateMode('light')\r\n            toggText = 'Enable dark mode'\r\n            updateTextStyle({\r\n                color : 'black'\r\n            })\r\n            document.title = 'Dark Mode'\r\n            document.body.style.backgroundColor = '#fff'\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"form-check form-switch mx-2\">\r\n                            <label className=\"form-check-label\" style={textStyle} htmlFor=\"flexSwitchCheckDefault\">Enable {mode === 'light'?'dark':'light'} mode</label>\r\n                            <input className=\"form-check-input\" onChange={toggMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        </div>\r\n                        <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string }\r\nNavbar.defaultProps = { title: \"Home\" }","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, textfun] = useState('Default text for text area')\r\n\r\n    let handleClick = () => {\r\n        // console.log(\"button clicked\")\r\n        textfun(text.toUpperCase())\r\n    }\r\n\r\n    let handleClickLow = () => {\r\n        textfun(text.toLowerCase())\r\n    }\r\n\r\n    let clearText = () => {\r\n        textfun('');\r\n    }\r\n\r\n    let handleChange = (event) => {\r\n        // console.log(\"text was changed \");\r\n        textfun(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <h3 className='my-20'>{props.heading}</h3>\r\n                <div className='mb-3'>\r\n                <textarea className='form-control' id=\"myBox\" rows='5' value={text} onChange={handleChange}></textarea>\r\n                </div>\r\n                <button className='btn btn-primary mt-20 mx-1' onClick={handleClick}>Convert to UPPERCASE</button>\r\n                <button className='btn btn-primary mt-20 mx-1' onClick={handleClickLow}>Convert to lowercase</button>\r\n                <button className='btn btn-danger mt-20 mx-1' onClick={clearText}>Clear text</button>\r\n            </div>\r\n            <div className='my-3'>\r\n                <h2>Your text summary</h2>\r\n                <p> <b>{text.length}</b> characters and <b>{text.split(\" \").length}</b> words in your text</p>\r\n            </div>\r\n            <div>\r\n                <h2>Preview of your text</h2>\r\n                <p>{text.length > 0 ? text : 'Enter some text to see the preview'}</p>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<TextForm />} />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter}  from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}